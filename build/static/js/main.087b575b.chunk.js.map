{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatDate","date","Date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","pokemon","borderColor","useState","setColor","history","useHistory","className","onClick","id","push","onMouseEnter","onMouseLeave","style","src","picture","alt","name","created","types","map","POKEMONS","hp","cp","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","method","body","JSON","stringify","headers","index","findIndex","filter","term","includes","Object","keys","length","console","process","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","to","PokemonList","useEffect","getPokemons","position","top","right","Loader","PokemonsDetail","match","setPokemon","getPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","addPokemon","updatePokemon","isAddForm","validateForm","newForm","startsWith","endsWith","test","isTypesValid","onSubmit","preventDefault","handleSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","concat","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","login","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","PokemonDetail","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.087b575b.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\n  return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n};\n\nexport default formatDate;\n","const formatType = (type: string): string => {\n  let color: string;\n\n  switch (type) {\n    case \"Feu\":\n      color = \"red lighten-1\";\n      break;\n    case \"Eau\":\n      color = \"blue lighten-1\";\n      break;\n    case \"Plante\":\n      color = \"green lighten-1\";\n      break;\n    case \"Insecte\":\n      color = \"brown lighten-1\";\n      break;\n    case \"Normal\":\n      color = \"grey lighten-3\";\n      break;\n    case \"Vol\":\n      color = \"blue lighten-3\";\n      break;\n    case \"Poison\":\n      color = \"deep-purple accent-1\";\n      break;\n    case \"Fée\":\n      color = \"pink lighten-4\";\n      break;\n    case \"Psy\":\n      color = \"deep-purple darken-2\";\n      break;\n    case \"Electrik\":\n      color = \"lime accent-1\";\n      break;\n    case \"Combat\":\n      color = \"deep-orange\";\n      break;\n    default:\n      color = \"grey\";\n      break;\n  }\n\n  return `chip ${color}`;\n};\n\nexport default formatType;\n","import React, { FunctionComponent, useState } from \"react\";\nimport Pokemon from \"../models/pokemon\";\nimport \"./pokemon-card.css\";\nimport formatDate from \"../helpers/format-date\";\nimport formatType from \"../helpers/format-type\";\nimport { useHistory } from \"react-router-dom\";\n\ntype Props = {\n  pokemon: Pokemon;\n  borderColor?: string;\n};\n\nconst PokemonCard: FunctionComponent<Props> = ({\n  pokemon,\n  borderColor = \"#009688\",\n}) => {\n  const [color, setColor] = useState<string>();\n  const history = useHistory();\n\n  const showBorder = () => {\n    setColor(borderColor);\n  };\n\n  const hideBorder = () => {\n    setColor(\"#f5f5f5\");\n  };\n\n  const goToPokemon = (id: number) => {\n    history.push(`/pokemons/${id}`);\n  };\n\n  return (\n    <div\n      className=\"col s6 m4\"\n      onClick={() => goToPokemon(pokemon.id)}\n      onMouseEnter={showBorder}\n      onMouseLeave={hideBorder}\n    >\n      <div className=\"card horizontal\" style={{ borderColor: color }}>\n        <div className=\"card-image\">\n          <img src={pokemon.picture} alt={pokemon.name} />\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n            <p>\n              <small>{formatDate(pokemon.created)}</small>\n            </p>\n            {pokemon.types.map((type) => (\n              <span key={type} className={formatType(type)}>\n                {type}\n              </span>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonCard;\n","import Pokemon from \"./pokemon\";\n\nexport const POKEMONS: Pokemon[] = [\n  {\n    id: 1,\n    name: \"Bulbizarre\",\n    hp: 25,\n    cp: 5,\n    picture:\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n    types: [\"Plante\", \"Poison\"],\n    created: new Date(),\n  },\n  {\n    id: 2,\n    name: \"Salamèche\",\n    hp: 28,\n    cp: 6,\n    picture:\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n    types: [\"Feu\"],\n    created: new Date(),\n  },\n  {\n    id: 3,\n    name: \"Carapuce\",\n    hp: 21,\n    cp: 4,\n    picture:\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n    types: [\"Eau\"],\n    created: new Date(),\n  },\n  {\n    id: 4,\n    name: \"Aspicot\",\n    hp: 16,\n    cp: 2,\n    picture:\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n    types: [\"Insecte\", \"Poison\"],\n    created: new Date(),\n  },\n  {\n    id: 5,\n    name: \"Roucool\",\n    hp: 30,\n    cp: 7,\n    picture:\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n    types: [\"Normal\", \"Vol\"],\n    created: new Date(),\n  },\n  {\n    id: 6,\n    name: \"Rattata\",\n    hp: 18,\n    cp: 6,\n    picture:\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n    types: [\"Normal\"],\n    created: new Date(),\n  },\n  {\n    id: 7,\n    name: \"Piafabec\",\n    hp: 14,\n    cp: 5,\n    picture:\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n    types: [\"Normal\", \"Vol\"],\n    created: new Date(),\n  },\n  {\n    id: 8,\n    name: \"Abo\",\n    hp: 16,\n    cp: 4,\n    picture:\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n    types: [\"Poison\"],\n    created: new Date(),\n  },\n  {\n    id: 9,\n    name: \"Pikachu\",\n    hp: 21,\n    cp: 7,\n    picture:\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n    types: [\"Electrik\"],\n    created: new Date(),\n  },\n  {\n    id: 10,\n    name: \"Sabelette\",\n    hp: 19,\n    cp: 3,\n    picture:\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n    types: [\"Normal\"],\n    created: new Date(),\n  },\n  {\n    id: 11,\n    name: \"Mélofée\",\n    hp: 25,\n    cp: 5,\n    picture:\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n    types: [\"Fée\"],\n    created: new Date(),\n  },\n  {\n    id: 12,\n    name: \"Groupix\",\n    hp: 17,\n    cp: 8,\n    picture:\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n    types: [\"Feu\"],\n    created: new Date(),\n  },\n];\n\nexport default POKEMONS;\n","//CODE VALABLE CAR NOTRE API REST TEST EST UNE FAUSSE API / SIMULATION\nimport Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n\nexport default class PokemonService {\n  static pokemons: Pokemon[] = POKEMONS;\n\n  static isDev =\n    !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\n\n  static getPokemons(): Promise<Pokemon[]> {\n    if (this.isDev) {\n      return fetch(\"http://localhost:3001/pokemons\")\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id: number): Promise<Pokemon | null> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n        .then((response) => response.json())\n        .then((data) => (this.isEmpty(data) ? null : data))\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      resolve(this.pokemons.find((pokemon) => id === pokemon.id));\n    });\n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: \"PUT\",\n        body: JSON.stringify(pokemon),\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex((pokemon) => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    });\n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter((pokemon) => pokemon.id !== id);\n      resolve({});\n    });\n  }\n\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    pokemon.created = new Date(pokemon.created);\n\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: \"POST\",\n        body: JSON.stringify(pokemon),\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    });\n  }\n\n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      const results = this.pokemons.filter((pokemon) =>\n        pokemon.name.includes(term)\n      );\n      resolve(results);\n    });\n  }\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}\n//CODE CLASSIC SI API REST EN LIGNE\n// import Pokemon from \"../models/pokemon\";\n\n// export default class PokemonService {\n//   static getPokemons(): Promise<Pokemon[]> {\n//     return fetch(\"http://localhost:3001/pokemons\")\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static getPokemon(id: number): Promise<Pokemon | null> {\n//     return fetch(`http://localhost:3001/pokemons/${id}`)\n//       .then((response) => response.json())\n//       .then((data) => (this.isEmpty(data) ? null : data))\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"PUT\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static deletePokemon(pokemon: Pokemon): Promise<{}> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"DELETE\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     delete pokemon.created;\n\n//     return fetch(`http://localhost:3001/pokemons`, {\n//       method: \"POST\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//    static searchPokemon(term: string): Promise<Pokemon[]> {\n//     return fetch(`http://localhost:3001/pokemons?q=${term}`)\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static isEmpty(data: Object): boolean {\n//     return Object.keys(data).length === 0;\n//   }\n\n//   static handleError(error: Error): void {\n//     console.error(error);\n//   }\n// }\n","import React, { FunctionComponent, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Pokemon from \"../models/pokemon\";\nimport PokemonService from \"../services/pokemon-service\";\n\nconst PokemonSearch: FunctionComponent = () => {\n  const [term, setTerm] = useState<string>(\"\");\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n\n    if (term.length <= 1) {\n      setPokemons([]);\n      return;\n    }\n\n    PokemonService.searchPokemon(term).then((pokemons) =>\n      setPokemons(pokemons)\n    );\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col s12 m6 offset-m3\">\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <div className=\"input-field\">\n              <input\n                type=\"text\"\n                placeholder=\"Rechercher un pokémon\"\n                value={term}\n                onChange={(e) => handleInputChange(e)}\n              />\n            </div>\n            <div className=\"collection\">\n              {pokemons.map((pokemon) => (\n                <Link\n                  key={pokemon.id}\n                  to={`/pokemons/${pokemon.id}`}\n                  className=\"collection-item\"\n                >\n                  {pokemon.name}\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonSearch;\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport Pokemon from \"../models/pokemon\";\n// import POKEMONS from \"../models/mock-pokemon\";\nimport PokemonCard from \"../components/pokemon-card\";\nimport PokemonService from \"../services/pokemon-service\";\nimport { Link } from \"react-router-dom\";\nimport PokemonSearch from \"../components/pokemon-search\";\n\nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n  useEffect(() => {\n    PokemonService.getPokemons().then((pokemons) => setPokemons(pokemons));\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"center\">Pokédex</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <PokemonSearch />\n          {pokemons.map((pokemon) => (\n            <PokemonCard key={pokemon.id} pokemon={pokemon} />\n          ))}\n        </div>\n        <Link\n          className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\"\n          style={{ position: \"fixed\", top: \"100px\", right: \"100px\" }}\n          to=\"/pokemon/add\"\n        >\n          <i className=\"material-icons\">add</i>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonList;\n","import React, { FunctionComponent } from \"react\";\n\nconst Loader: FunctionComponent = () => {\n  return (\n    <div className=\"preloader-wrapper big active\">\n      <div className=\"spinner-layer spinner-blue\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport { RouteComponentProps, Link } from \"react-router-dom\";\nimport Pokemon from \"../models/pokemon\";\n// import POKEMONS from \"../models/mock-pokemon\";\nimport formatDate from \"../helpers/format-date\";\nimport formatType from \"../helpers/format-type\";\nimport PokemonService from \"../services/pokemon-service\";\nimport Loader from \"../components/loader\";\n\ntype Params = { id: string };\n\nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({\n  match,\n}) => {\n  const [pokemon, setPokemon] = useState<Pokemon | null>(null);\n\n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then((pokemon) =>\n      setPokemon(pokemon)\n    );\n  }, [match.params.id]);\n\n  return (\n    <div>\n      {pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\">\n            <h2 className=\"header center\">{pokemon.name}</h2>\n            <div className=\"card hoverable\">\n              <div className=\"card-image\">\n                <img\n                  src={pokemon.picture}\n                  alt={pokemon.name}\n                  style={{ width: \"250px\", margin: \"0 auto\" }}\n                />\n                <Link\n                  to={`/pokemons/edit/${pokemon.id}`}\n                  className=\"btn btn-floating halfway-fab waves-effect waves-light\"\n                >\n                  <i className=\"material-icons\">edit</i>\n                </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr>\n                        <td>Nom</td>\n                        <td>\n                          <strong>{pokemon.name}</strong>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Points de vie</td>\n                        <td>\n                          <strong>{pokemon.hp}</strong>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Dégâts</td>\n                        <td>\n                          <strong>{pokemon.cp}</strong>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Types</td>\n                        <td>\n                          {pokemon.types.map((type) => (\n                            <span key={type} className={formatType(type)}>\n                              {type}\n                            </span>\n                          ))}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Date de création</td>\n                        <td>{formatDate(pokemon.created)}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\">\n          <Loader />\n        </h4>\n      )}\n    </div>\n  );\n};\n\nexport default PokemonsDetail;\n","import React, { FunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst PageNotFound: FunctionComponent = () => {\n  return (\n    <div className=\"center\">\n      <img\n        src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\"\n        alt=\"Page non trouvée\"\n      />\n      <h1>Hey, cette page n'existe pas !</h1>\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React, { FunctionComponent, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Pokemon from \"../models/pokemon\";\nimport formatType from \"../helpers/format-type\";\nimport PokemonService from \"../services/pokemon-service\";\n\ntype Props = {\n  pokemon: Pokemon;\n  isEditForm: boolean;\n};\n\ntype Field = {\n  value?: any;\n  error?: string;\n  isValid?: boolean;\n};\n\ntype Form = {\n  picture: Field;\n  name: Field;\n  hp: Field;\n  cp: Field;\n  types: Field;\n};\n\nconst PokemonForm: FunctionComponent<Props> = ({ pokemon, isEditForm }) => {\n  const [form, setForm] = useState<Form>({\n    picture: { value: pokemon.picture },\n    name: { value: pokemon.name, isValid: true },\n    hp: { value: pokemon.hp, isValid: true },\n    cp: { value: pokemon.cp, isValid: true },\n    types: { value: pokemon.types, isValid: true },\n  });\n\n  const history = useHistory();\n\n  const types: string[] = [\n    \"Plante\",\n    \"Feu\",\n    \"Eau\",\n    \"Insecte\",\n    \"Normal\",\n    \"Electrik\",\n    \"Poison\",\n    \"Fée\",\n    \"Vol\",\n    \"Combat\",\n    \"Psy\",\n  ];\n\n  const hasType = (type: string): boolean => {\n    return form.types.value.includes(type);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField });\n  };\n\n  const selectType = (\n    type: string,\n    e: React.ChangeEvent<HTMLInputElement>\n  ): void => {\n    const checked = e.target.checked;\n    let newField: Field;\n\n    if (checked) {\n      // si user coche un type\n      const newTypes: string[] = form.types.value.concat([type]);\n      newField = { value: newTypes };\n    } else {\n      //si user decoche un ytpe\n      const newTypes: string[] = form.types.value.filter(\n        (currentType: string) => currentType !== type\n      );\n      newField = { value: newTypes };\n    }\n\n    setForm({ ...form, ...{ types: newField } });\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n\n    if (isFormValid) {\n      pokemon.picture = form.picture.value;\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n\n      isEditForm ? updatePokemon() : addPokemon();\n    }\n  };\n\n  const addPokemon = () => {\n    PokemonService.addPokemon(pokemon).then(() => history.push(\"/pokemons/\"));\n  };\n\n  const updatePokemon = () => {\n    PokemonService.updatePokemon(pokemon).then(() =>\n      history.push(`/pokemons/${pokemon.id}`)\n    );\n  };\n\n  const isAddForm = () => {\n    return !isEditForm;\n  };\n\n  const validateForm = () => {\n    let newForm: Form = form;\n    //validate url\n    if (isAddForm()) {\n      const start =\n        \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\";\n\n      if (\n        !form.picture.value.startsWith(start) ||\n        !form.picture.value.endsWith(end)\n      ) {\n        const errorMsg: string = \" l url n est pas valide\";\n        const newField: Field = {\n          value: form.picture.value,\n          error: errorMsg,\n          isValid: false,\n        };\n        newForm = { ...form, ...{ picture: newField } };\n      } else {\n        const newField: Field = {\n          value: form.picture.value,\n          error: \"\",\n          isValid: true,\n        };\n        newForm = { ...form, ...{ picture: newField } };\n      }\n    }\n\n    //validator name\n    if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = \"le nom du pokemon est requis (1-25).\";\n      const newField: Field = {\n        value: form.name.value,\n        error: errorMsg,\n        isValid: false,\n      };\n      newForm = { ...newForm, ...{ name: newField } };\n    } else {\n      const newField: Field = {\n        value: form.name.value,\n        error: \"\",\n        isValid: true,\n      };\n      newForm = { ...newForm, ...{ name: newField } };\n    }\n\n    //validator hp\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = \"les points de vie sont compris entre 0 et 999\";\n      const newField: Field = {\n        value: form.hp.value,\n        error: errorMsg,\n        isValid: false,\n      };\n      newForm = { ...newForm, ...{ hp: newField } };\n    } else {\n      const newField: Field = {\n        value: form.hp.value,\n        error: \"\",\n        isValid: true,\n      };\n      newForm = { ...newForm, ...{ hp: newField } };\n    }\n\n    //validator cp\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = \"les degats sont compris entre 0 et 99.\";\n      const newField: Field = {\n        value: form.cp.value,\n        error: errorMsg,\n        isValid: false,\n      };\n      newForm = { ...newForm, ...{ cp: newField } };\n    } else {\n      const newField: Field = {\n        value: form.cp.value,\n        error: \"\",\n        isValid: true,\n      };\n      newForm = { ...newForm, ...{ cp: newField } };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  };\n\n  const isTypesValid = (type: string): boolean => {\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    } else if (form.types.value.length >= 3 && !hasType(type)) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n  };\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            {isEditForm && (\n              <div className=\"card-image\">\n                <img\n                  src={pokemon.picture}\n                  alt={pokemon.name}\n                  style={{ width: \"250px\", margin: \"0 auto\" }}\n                />\n                <span className=\"btn-floating halfway-fab waves-effect waves-light\">\n                  <i onClick={deletePokemon} className=\"material-icons\">\n                    delete\n                  </i>\n                </span>\n              </div>\n            )}\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon picture */}\n                {isAddForm() && (\n                  <div className=\"form-group\">\n                    <label htmlFor=\"name\">Image</label>\n                    <input\n                      id=\"picture\"\n                      name=\"picture\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={form.picture.value}\n                      onChange={(e) => handleInputChange(e)}\n                    ></input>\n                    {form.picture.error && (\n                      <div className=\"card-panel red accent-1\">\n                        {form.picture.error}\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={form.name.value}\n                    onChange={(e) => handleInputChange(e)}\n                  ></input>\n                  {form.name.error && (\n                    <div className=\"card-panel red accent-1\">\n                      {form.name.error}\n                    </div>\n                  )}\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input\n                    id=\"hp\"\n                    name=\"hp\"\n                    type=\"number\"\n                    className=\"form-control\"\n                    value={form.hp.value}\n                    onChange={(e) => handleInputChange(e)}\n                  ></input>\n                  {form.hp.error && (\n                    <div className=\"card-panel red accent-1\">\n                      {form.hp.error}\n                    </div>\n                  )}\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input\n                    id=\"cp\"\n                    name=\"cp\"\n                    type=\"number\"\n                    className=\"form-control\"\n                    value={form.cp.value}\n                    onChange={(e) => handleInputChange(e)}\n                  ></input>\n                  {form.cp.error && (\n                    <div className=\"card-panel red accent-1\">\n                      {form.cp.error}\n                    </div>\n                  )}\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map((type) => (\n                    <div key={type} style={{ marginBottom: \"10px\" }}>\n                      <label>\n                        <input\n                          id={type}\n                          type=\"checkbox\"\n                          className=\"filled-in\"\n                          value={type}\n                          disabled={!isTypesValid(type)}\n                          checked={hasType(type)}\n                          onChange={(e) => selectType(type, e)}\n                        ></input>\n                        <span>\n                          <p className={formatType(type)}>{type}</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              {/* <div className=\"card-action\">\n                <Link to=\"/\">Retour</Link>\n              </div> */}\n\n              <div className=\"card-action center\">\n                <div className=\"card-action\">\n                  <Link className=\"btn orange\" to=\"/pokemons\">\n                    Retour\n                  </Link>\n                </div>\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn \">\n                  Valider\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default PokemonForm;\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport PokemonForm from \"../components/pokemon-form\";\nimport Pokemon from \"../models/pokemon\";\nimport PokemonService from \"../services/pokemon-service\";\nimport Loader from \"../components/loader\";\n// import POKEMONS from \"../models/mock-pokemon\";\n\ntype Params = { id: string };\n\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({\n  match,\n}) => {\n  const [pokemon, setPokemon] = useState<Pokemon | null>(null);\n\n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then((pokemon) =>\n      setPokemon(pokemon)\n    );\n  }, [match.params.id]);\n\n  return (\n    <div>\n      {pokemon ? (\n        <div className=\"row\">\n          <h2 className=\"header center\">Éditer {pokemon.name}</h2>\n          <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\">\n          <Loader />\n        </h4>\n      )}\n    </div>\n  );\n};\n\nexport default PokemonEdit;\n","export default class Pokemon {\n  // 1. Typage des propiétés d'un pokémon.\n  id: number;\n  hp: number;\n  cp: number;\n  name: string;\n  picture: string;\n  types: Array<string>;\n  created: Date;\n\n  // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\n  constructor(\n    id: number,\n    hp: number = 100,\n    cp: number = 10,\n    name: string = \"...\",\n    picture: string = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png\",\n    types: Array<string> = [\"Normal\"],\n    created: Date = new Date()\n  ) {\n    // 3. Initialisation des propiétés d'un pokémons.\n    this.id = id;\n    this.hp = hp;\n    this.cp = cp;\n    this.name = name;\n    this.picture = picture;\n    this.types = types;\n    this.created = created;\n  }\n}\n","import React, { FunctionComponent, useState } from \"react\";\nimport PokemonForm from \"../components/pokemon-form\";\nimport Pokemon from \"../models/pokemon\";\n\nconst PokemonAdd: FunctionComponent = () => {\n  const [id] = useState<number>(new Date().getTime());\n  const [pokemon] = useState<Pokemon>(new Pokemon(id));\n\n  return (\n    <div className=\"row\">\n      <h2 className=\"header center\"> Ajouter un pokemon</h2>\n      <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\n    </div>\n  );\n};\n\nexport default PokemonAdd;\n","export default class AuthenticationService {\n  static isAuthenticated: boolean = false;\n\n  static login(username: string, password: string): Promise<boolean> {\n    const isAuthenticated = username === \"pikachu\" && password === \"pikachu\";\n\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        this.isAuthenticated = isAuthenticated;\n        resolve(isAuthenticated);\n      }, 1000);\n    });\n  }\n}\n","import React, { FunctionComponent, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthenticationService from \"../services/authentication-service\";\n\ntype Field = {\n  value?: any;\n  error?: string;\n  isValid?: boolean;\n};\n\ntype Form = {\n  username: Field;\n  password: Field;\n};\n\nconst Login: FunctionComponent = () => {\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: \"\" },\n    password: { value: \"\" },\n  });\n\n  const [message, setMessage] = useState<string>(\n    \"Vous êtes déconnecté. (pikachu / pikachu)\"\n  );\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField });\n  };\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if (form.username.value.length < 3) {\n      const errorMsg: string =\n        \"Votre prénom doit faire au moins 3 caractères de long.\";\n      const newField: Field = {\n        value: form.username.value,\n        error: errorMsg,\n        isValid: false,\n      };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = {\n        value: form.username.value,\n        error: \"\",\n        isValid: true,\n      };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if (form.password.value.length < 6) {\n      const errorMsg: string =\n        \"Votre mot de passe doit faire au moins 6 caractères de long.\";\n      const newField: Field = {\n        value: form.password.value,\n        error: errorMsg,\n        isValid: false,\n      };\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = {\n        value: form.password.value,\n        error: \"\",\n        isValid: true,\n      };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if (isFormValid) {\n      setMessage(\"👉 Tentative de connexion en cours ...\");\n      AuthenticationService.login(\n        form.username.value,\n        form.password.value\n      ).then((isAuthenticated) => {\n        if (!isAuthenticated) {\n          setMessage(\"🔐 Identifiant ou mot de passe incorrect.\");\n          return;\n        }\n\n        history.push(\"/pokemons\");\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && (\n                  <div className=\"form-group\">\n                    <div className=\"card-panel grey lighten-5\">{message}</div>\n                  </div>\n                )}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input\n                    id=\"username\"\n                    type=\"text\"\n                    name=\"username\"\n                    className=\"form-control\"\n                    value={form.username.value}\n                    onChange={(e) => handleInputChange(e)}\n                  ></input>\n                  {/* error */}\n                  {form.username.error && (\n                    <div className=\"card-panel red accent-1\">\n                      {form.username.error}\n                    </div>\n                  )}\n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input\n                    id=\"password\"\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"form-control\"\n                    value={form.password.value}\n                    onChange={(e) => handleInputChange(e)}\n                  ></input>\n                  {/* error */}\n                  {form.password.error && (\n                    <div className=\"card-panel red accent-1\">\n                      {form.password.error}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">\n                  Valider\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthenticationService from \"./services/authentication-service\";\n\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      const isAuthenticated = AuthenticationService.isAuthenticated;\n      if (!isAuthenticated) {\n        return <Redirect to={{ pathname: \"/login\" }} />;\n      }\n\n      return <Component {...props} />;\n    }}\n  />\n);\n\nexport default PrivateRoute;\n","import React, { FunctionComponent } from \"react\";\nimport PokemonList from \"./pages/pokemon-list\";\nimport PokemonDetail from \"./pages/pokemon-detail\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport PageNotFound from \"./pages/page-not-found\";\nimport PokemonEdit from \"./pages/pokemon-edit\";\nimport PokemonAdd from \"./pages/pokemon-add\";\nimport Login from \"./pages/login\";\nimport PrivateRoute from \"./PrivateRoute\";\n\n//OR\n// import React from \"react\";\n\n// const App: React.FC = () => {\nconst App: FunctionComponent = () => {\n  return (\n    <Router>\n      <div>\n        {/* la barre de navigation à toutes les pages */}\n        <nav>\n          <div className=\"nav-wrapper teal\">\n            <Link to=\"/\" className=\"brand-logo center\">\n              Pokédex\n            </Link>\n          </div>\n        </nav>\n        {/* le systeme de gestion des routes de notre app */}\n        <Switch>\n          <Route exact path=\"/\" component={PokemonList} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/pokemons\" component={PokemonList} />\n          <PrivateRoute exact path=\"/pokemon/add\" component={PokemonAdd} />\n          <PrivateRoute\n            exact\n            path=\"/pokemons/edit/:id\"\n            component={PokemonEdit}\n          />\n          <Route path=\"/pokemons/:id\" component={PokemonDetail} />\n          <Route component={PageNotFound} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}