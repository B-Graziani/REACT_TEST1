{"ast":null,"code":"//CODE VALABLE CAR NOTRE API REST TEST EST UNE FAUSSE API / SIMULATION\n//CODE CLASSIC SI API REST EN LIGNE\n// import Pokemon from \"../models/pokemon\";\n// export default class PokemonService {\n//   static getPokemons(): Promise<Pokemon[]> {\n//     return fetch(\"http://localhost:3001/pokemons\")\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//   static getPokemon(id: number): Promise<Pokemon | null> {\n//     return fetch(`http://localhost:3001/pokemons/${id}`)\n//       .then((response) => response.json())\n//       .then((data) => (this.isEmpty(data) ? null : data))\n//       .catch((error) => this.handleError(error));\n//   }\n//   static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"PUT\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//   static deletePokemon(pokemon: Pokemon): Promise<{}> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"DELETE\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//   static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     delete pokemon.created;\n//     return fetch(`http://localhost:3001/pokemons`, {\n//       method: \"POST\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//    static searchPokemon(term: string): Promise<Pokemon[]> {\n//     return fetch(`http://localhost:3001/pokemons?q=${term}`)\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//   static isEmpty(data: Object): boolean {\n//     return Object.keys(data).length === 0;\n//   }\n//   static handleError(error: Error): void {\n//     console.error(error);\n//   }\n// }","map":{"version":3,"names":[],"sources":["/Users/benoitgraziani/Desktop/API_FRONT_1/src/services/pokemon-service.ts"],"sourcesContent":["//CODE VALABLE CAR NOTRE API REST TEST EST UNE FAUSSE API / SIMULATION\n//CODE CLASSIC SI API REST EN LIGNE\n// import Pokemon from \"../models/pokemon\";\n\n// export default class PokemonService {\n//   static getPokemons(): Promise<Pokemon[]> {\n//     return fetch(\"http://localhost:3001/pokemons\")\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static getPokemon(id: number): Promise<Pokemon | null> {\n//     return fetch(`http://localhost:3001/pokemons/${id}`)\n//       .then((response) => response.json())\n//       .then((data) => (this.isEmpty(data) ? null : data))\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"PUT\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static deletePokemon(pokemon: Pokemon): Promise<{}> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"DELETE\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     delete pokemon.created;\n\n//     return fetch(`http://localhost:3001/pokemons`, {\n//       method: \"POST\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//    static searchPokemon(term: string): Promise<Pokemon[]> {\n//     return fetch(`http://localhost:3001/pokemons?q=${term}`)\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static isEmpty(data: Object): boolean {\n//     return Object.keys(data).length === 0;\n//   }\n\n//   static handleError(error: Error): void {\n//     console.error(error);\n//   }\n// }\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}