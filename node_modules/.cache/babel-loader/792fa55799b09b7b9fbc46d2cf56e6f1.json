{"ast":null,"code":"//CODE VALABLE CAR NOTRE API REST TEST EST UNE FAUSSE API / SIMULATION\nimport POKEMONS from \"../models/mock-pokemon\";\nexport default class PokemonService {\n  static getPokemons() {\n    if (this.isDev) {\n      return fetch(\"http://localhost:3001/pokemons\").then(response => response.json()).catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id) {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    });\n  }\n\n  static updatePokemon(pokemon) {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: \"PUT\",\n        body: JSON.stringify(pokemon),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const {\n        id\n      } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    });\n  }\n\n  static deletePokemon(pokemon) {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const {\n        id\n      } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    });\n  }\n\n  static addPokemon(pokemon) {\n    pokemon.created = new Date(pokemon.created);\n\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: \"POST\",\n        body: JSON.stringify(pokemon),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    });\n  }\n\n  static searchPokemon(term) {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`).then(response => response.json()).catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n  }\n\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error) {\n    console.error(error);\n  }\n\n} //CODE CLASSIC SI API REST EN LIGNE\n// import Pokemon from \"../models/pokemon\";\n// export default class PokemonService {\n//   static getPokemons(): Promise<Pokemon[]> {\n//     return fetch(\"http://localhost:3001/pokemons\")\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//   static getPokemon(id: number): Promise<Pokemon | null> {\n//     return fetch(`http://localhost:3001/pokemons/${id}`)\n//       .then((response) => response.json())\n//       .then((data) => (this.isEmpty(data) ? null : data))\n//       .catch((error) => this.handleError(error));\n//   }\n//   static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"PUT\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//   static deletePokemon(pokemon: Pokemon): Promise<{}> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"DELETE\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//   static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     delete pokemon.created;\n//     return fetch(`http://localhost:3001/pokemons`, {\n//       method: \"POST\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//    static searchPokemon(term: string): Promise<Pokemon[]> {\n//     return fetch(`http://localhost:3001/pokemons?q=${term}`)\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//   static isEmpty(data: Object): boolean {\n//     return Object.keys(data).length === 0;\n//   }\n//   static handleError(error: Error): void {\n//     console.error(error);\n//   }\n// }\n\nPokemonService.pokemons = POKEMONS;\nPokemonService.isDev = !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";","map":{"version":3,"names":["POKEMONS","PokemonService","getPokemons","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","getPokemon","id","data","isEmpty","find","pokemon","updatePokemon","method","body","JSON","stringify","headers","index","findIndex","deletePokemon","filter","addPokemon","created","Date","push","searchPokemon","term","results","name","includes","Object","keys","length","console","process","env","NODE_ENV"],"sources":["/Users/benoitgraziani/Desktop/API_FRONT_1/src/services/pokemon-service.ts"],"sourcesContent":["//CODE VALABLE CAR NOTRE API REST TEST EST UNE FAUSSE API / SIMULATION\nimport Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n\nexport default class PokemonService {\n  static pokemons: Pokemon[] = POKEMONS;\n\n  static isDev =\n    !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\n\n  static getPokemons(): Promise<Pokemon[]> {\n    if (this.isDev) {\n      return fetch(\"http://localhost:3001/pokemons\")\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id: number): Promise<Pokemon | null> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n        .then((response) => response.json())\n        .then((data) => (this.isEmpty(data) ? null : data))\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      resolve(this.pokemons.find((pokemon) => id === pokemon.id));\n    });\n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: \"PUT\",\n        body: JSON.stringify(pokemon),\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex((pokemon) => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    });\n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter((pokemon) => pokemon.id !== id);\n      resolve({});\n    });\n  }\n\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    pokemon.created = new Date(pokemon.created);\n\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: \"POST\",\n        body: JSON.stringify(pokemon),\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    });\n  }\n\n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      const results = this.pokemons.filter((pokemon) =>\n        pokemon.name.includes(term)\n      );\n      resolve(results);\n    });\n  }\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}\n//CODE CLASSIC SI API REST EN LIGNE\n// import Pokemon from \"../models/pokemon\";\n\n// export default class PokemonService {\n//   static getPokemons(): Promise<Pokemon[]> {\n//     return fetch(\"http://localhost:3001/pokemons\")\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static getPokemon(id: number): Promise<Pokemon | null> {\n//     return fetch(`http://localhost:3001/pokemons/${id}`)\n//       .then((response) => response.json())\n//       .then((data) => (this.isEmpty(data) ? null : data))\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"PUT\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static deletePokemon(pokemon: Pokemon): Promise<{}> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"DELETE\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     delete pokemon.created;\n\n//     return fetch(`http://localhost:3001/pokemons`, {\n//       method: \"POST\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//    static searchPokemon(term: string): Promise<Pokemon[]> {\n//     return fetch(`http://localhost:3001/pokemons?q=${term}`)\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static isEmpty(data: Object): boolean {\n//     return Object.keys(data).length === 0;\n//   }\n\n//   static handleError(error: Error): void {\n//     console.error(error);\n//   }\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}