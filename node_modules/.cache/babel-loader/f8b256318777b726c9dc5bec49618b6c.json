{"ast":null,"code":"import _classCallCheck from\"/Users/benoitgraziani/Desktop/API_FRONT_1/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/benoitgraziani/Desktop/API_FRONT_1/node_modules/@babel/runtime/helpers/esm/createClass.js\";//CODE VALABLE CAR NOTRE API REST TEST EST UNE FAUSSE API / SIMULATION\nimport POKEMONS from\"../models/mock-pokemon\";var PokemonService=/*#__PURE__*/function(){function PokemonService(){_classCallCheck(this,PokemonService);}_createClass(PokemonService,null,[{key:\"getPokemons\",value:function getPokemons(){var _this=this;if(this.isDev){return fetch(\"http://localhost:3001/pokemons\").then(function(response){return response.json();}).catch(function(error){return _this.handleError(error);});}return new Promise(function(resolve){resolve(_this.pokemons);});}},{key:\"getPokemon\",value:function getPokemon(id){var _this2=this;if(this.isDev){return fetch(\"http://localhost:3001/pokemons/\".concat(id)).then(function(response){return response.json();}).then(function(data){return _this2.isEmpty(data)?null:data;}).catch(function(error){return _this2.handleError(error);});}return new Promise(function(resolve){resolve(_this2.pokemons.find(function(pokemon){return id===pokemon.id;}));});}},{key:\"updatePokemon\",value:function updatePokemon(pokemon){var _this3=this;if(this.isDev){return fetch(\"http://localhost:3001/pokemons/\".concat(pokemon.id),{method:\"PUT\",body:JSON.stringify(pokemon),headers:{\"Content-Type\":\"application/json\"}}).then(function(response){return response.json();}).catch(function(error){return _this3.handleError(error);});}return new Promise(function(resolve){var id=pokemon.id;var index=_this3.pokemons.findIndex(function(pokemon){return pokemon.id===id;});_this3.pokemons[index]=pokemon;resolve(pokemon);});}},{key:\"deletePokemon\",value:function deletePokemon(pokemon){var _this4=this;if(this.isDev){return fetch(\"http://localhost:3001/pokemons/\".concat(pokemon.id),{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\"}}).then(function(response){return response.json();}).catch(function(error){return _this4.handleError(error);});}return new Promise(function(resolve){var id=pokemon.id;_this4.pokemons=_this4.pokemons.filter(function(pokemon){return pokemon.id!==id;});resolve({});});}},{key:\"addPokemon\",value:function addPokemon(pokemon){var _this5=this;pokemon.created=new Date(pokemon.created);if(this.isDev){return fetch(\"http://localhost:3001/pokemons\",{method:\"POST\",body:JSON.stringify(pokemon),headers:{\"Content-Type\":\"application/json\"}}).then(function(response){return response.json();}).catch(function(error){return _this5.handleError(error);});}return new Promise(function(resolve){_this5.pokemons.push(pokemon);resolve(pokemon);});}},{key:\"searchPokemon\",value:function searchPokemon(term){var _this6=this;if(this.isDev){return fetch(\"http://localhost:3001/pokemons?q=\".concat(term)).then(function(response){return response.json();}).catch(function(error){return _this6.handleError(error);});}return new Promise(function(resolve){var results=_this6.pokemons.filter(function(pokemon){return pokemon.name.includes(term);});resolve(results);});}},{key:\"isEmpty\",value:function isEmpty(data){return Object.keys(data).length===0;}},{key:\"handleError\",value:function handleError(error){console.error(error);}}]);return PokemonService;}();//CODE CLASSIC SI API REST EN LIGNE\n// import Pokemon from \"../models/pokemon\";\n// export default class PokemonService {\n//   static getPokemons(): Promise<Pokemon[]> {\n//     return fetch(\"http://localhost:3001/pokemons\")\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//   static getPokemon(id: number): Promise<Pokemon | null> {\n//     return fetch(`http://localhost:3001/pokemons/${id}`)\n//       .then((response) => response.json())\n//       .then((data) => (this.isEmpty(data) ? null : data))\n//       .catch((error) => this.handleError(error));\n//   }\n//   static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"PUT\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//   static deletePokemon(pokemon: Pokemon): Promise<{}> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"DELETE\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//   static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     delete pokemon.created;\n//     return fetch(`http://localhost:3001/pokemons`, {\n//       method: \"POST\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//    static searchPokemon(term: string): Promise<Pokemon[]> {\n//     return fetch(`http://localhost:3001/pokemons?q=${term}`)\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n//   static isEmpty(data: Object): boolean {\n//     return Object.keys(data).length === 0;\n//   }\n//   static handleError(error: Error): void {\n//     console.error(error);\n//   }\n// }\nPokemonService.pokemons=POKEMONS;PokemonService.isDev=!process.env.NODE_ENV||process.env.NODE_ENV===\"development\";export{PokemonService as default};","map":{"version":3,"names":["POKEMONS","PokemonService","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","id","data","isEmpty","find","pokemon","method","body","JSON","stringify","headers","index","findIndex","filter","created","Date","push","term","results","name","includes","Object","keys","length","console","process","env","NODE_ENV"],"sources":["/Users/benoitgraziani/Desktop/API_FRONT_1/src/services/pokemon-service.ts"],"sourcesContent":["//CODE VALABLE CAR NOTRE API REST TEST EST UNE FAUSSE API / SIMULATION\nimport Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n\nexport default class PokemonService {\n  static pokemons: Pokemon[] = POKEMONS;\n\n  static isDev =\n    !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\n\n  static getPokemons(): Promise<Pokemon[]> {\n    if (this.isDev) {\n      return fetch(\"http://localhost:3001/pokemons\")\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id: number): Promise<Pokemon | null> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n        .then((response) => response.json())\n        .then((data) => (this.isEmpty(data) ? null : data))\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      resolve(this.pokemons.find((pokemon) => id === pokemon.id));\n    });\n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: \"PUT\",\n        body: JSON.stringify(pokemon),\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex((pokemon) => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    });\n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter((pokemon) => pokemon.id !== id);\n      resolve({});\n    });\n  }\n\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    pokemon.created = new Date(pokemon.created);\n\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: \"POST\",\n        body: JSON.stringify(pokemon),\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    });\n  }\n\n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n        .then((response) => response.json())\n        .catch((error) => this.handleError(error));\n    }\n\n    return new Promise((resolve) => {\n      const results = this.pokemons.filter((pokemon) =>\n        pokemon.name.includes(term)\n      );\n      resolve(results);\n    });\n  }\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}\n//CODE CLASSIC SI API REST EN LIGNE\n// import Pokemon from \"../models/pokemon\";\n\n// export default class PokemonService {\n//   static getPokemons(): Promise<Pokemon[]> {\n//     return fetch(\"http://localhost:3001/pokemons\")\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static getPokemon(id: number): Promise<Pokemon | null> {\n//     return fetch(`http://localhost:3001/pokemons/${id}`)\n//       .then((response) => response.json())\n//       .then((data) => (this.isEmpty(data) ? null : data))\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"PUT\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static deletePokemon(pokemon: Pokemon): Promise<{}> {\n//     return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n//       method: \"DELETE\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n//     delete pokemon.created;\n\n//     return fetch(`http://localhost:3001/pokemons`, {\n//       method: \"POST\",\n//       body: JSON.stringify(pokemon),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//    static searchPokemon(term: string): Promise<Pokemon[]> {\n//     return fetch(`http://localhost:3001/pokemons?q=${term}`)\n//       .then((response) => response.json())\n//       .catch((error) => this.handleError(error));\n//   }\n\n//   static isEmpty(data: Object): boolean {\n//     return Object.keys(data).length === 0;\n//   }\n\n//   static handleError(error: Error): void {\n//     console.error(error);\n//   }\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}