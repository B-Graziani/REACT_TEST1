{"ast":null,"code":"var _jsxFileName = \"/Users/benoitgraziani/Desktop/API_FRONT_1/src/PrivateRoute.tsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthenticationService from \"./services/authentication-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      const isAuthenticated = AuthenticationService.isAuthenticated;\n\n      if (!isAuthenticated) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 16\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Redirect","AuthenticationService","PrivateRoute","component","Component","rest","props","isAuthenticated","pathname"],"sources":["/Users/benoitgraziani/Desktop/API_FRONT_1/src/PrivateRoute.tsx"],"sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthenticationService from \"./services/authentication-service\";\n\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      const isAuthenticated = AuthenticationService.isAuthenticated;\n      if (!isAuthenticated) {\n        return <Redirect to={{ pathname: \"/login\" }} />;\n      }\n\n      return <Component {...props} />;\n    }}\n  />\n);\n\nexport default PrivateRoute;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;;;AAEA,MAAMC,YAAY,GAAG;EAAA,IAAC;IAAEC,SAAS,EAAEC,SAAb;IAAwB,GAAGC;EAA3B,CAAD;EAAA,oBACnB,QAAC,KAAD,OACMA,IADN;IAEE,MAAM,EAAGC,KAAD,IAAW;MACjB,MAAMC,eAAe,GAAGN,qBAAqB,CAACM,eAA9C;;MACA,IAAI,CAACA,eAAL,EAAsB;QACpB,oBAAO,QAAC,QAAD;UAAU,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAZ;QAAd;UAAA;UAAA;UAAA;QAAA,QAAP;MACD;;MAED,oBAAO,QAAC,SAAD,OAAeF;MAAf;QAAA;QAAA;QAAA;MAAA,QAAP;IACD;EATH;IAAA;IAAA;IAAA;EAAA,QADmB;AAAA,CAArB;;KAAMJ,Y;AAcN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}